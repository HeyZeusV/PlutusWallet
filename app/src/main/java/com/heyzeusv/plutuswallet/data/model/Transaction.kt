package com.heyzeusv.plutuswallet.data.model

import androidx.room.Entity
import androidx.room.ForeignKey
import androidx.room.ForeignKey.Companion.CASCADE
import androidx.room.Index
import androidx.room.PrimaryKey
import java.math.BigDecimal
import java.time.Instant
import java.time.ZoneId.systemDefault
import java.time.ZonedDateTime

/**
 *  Representation of Transaction table.
 *
 *  @ForeignKey one Account/Category to many Transactions. Update in parent table will cause
 *              change in corresponding child row.
 *  @Index indices on foreign keys.
 *
 *  Each Transaction has a unique [id] which is auto generated by Room. [title] which is auto
 *  generated if user leaves blank. [date] is defaulted to current time if user leaves blank.
 *  The [total] amount defaults to 0. [account] that Transaction belongs to. [type] is either
 *  "Expense" or "Income" which is used to determine which Categories are selectable. [category]
 *  that Transaction is listed under. [memo] allows user to enter any additional information.
 *  [repeating] is used to determine if Transaction should automatically repeat in the future.
 *  [frequency] how often Transaction repeats. [period] is time to wait before next repeat.
 *  [futureDate] is created by multiplying [frequency] and [period] and adding it to [date].
 *  [futureTCreated] is used to determine if this Transaction has been repeated already.
 */
@Entity(foreignKeys = [ForeignKey(entity = Account::class,
                                  parentColumns = arrayOf("name"),
                                  childColumns = arrayOf("account"),
                                  onUpdate = CASCADE),
                       ForeignKey(entity = Category::class,
                                  parentColumns = arrayOf("name", "type"),
                                  childColumns = arrayOf("category", "type"),
                                  onUpdate = CASCADE)],
        indices = [Index(value = ["category", "type"],
                         name = "index_cat_name_type"),
                   Index(value = ["account"],
                         name = "index_account_name")])
data class Transaction(
    @PrimaryKey(autoGenerate = true)
    var id: Int = 0,
    var title: String = "",
    var date: ZonedDateTime = ZonedDateTime.now(systemDefault()),
    var total: BigDecimal = BigDecimal("0"),
    var account: String = "",
    var type: String = "Expense",
    var category: String = "",
    var memo: String = "",
    var repeating: Boolean = false,
    var frequency: Int = 1,
    var period: Int = 0,
    var futureDate: ZonedDateTime = Instant.ofEpochMilli(Long.MAX_VALUE).atZone(systemDefault()),
    var futureTCreated: Boolean = false
)